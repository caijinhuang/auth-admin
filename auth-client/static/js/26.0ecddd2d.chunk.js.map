{"version":3,"sources":["../static/js/26.0ecddd2d.chunk.js","routes/Widgets/TransferTree/model/index.js"],"names":["webpackJsonp","1034","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__utils_modelEnhance__","namespace","state","dataSource","asyncDataSource","subscriptions","setup","_ref","dispatch","history","listen","_ref2","pathname","type","afterResponse","resp","data","payload","valueField","url"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,GAC7C,IAAIC,GAAoDJ,EAAoB,ICLjGD,GAAA,QAAeE,OAAAG,EAAA,IACbC,UAAW,eAEXC,OACEC,cACAC,oBAGFC,eACEC,MADa,SAAAC,GACgB,GAArBC,GAAqBD,EAArBC,QAAqBD,GAAXE,QACRC,OAAO,SAAAC,GACI,kBADcA,EAAfC,UAEdJ,GACEK,KAAM,WACNC,cAAe,SAAAC,GAAA,MAAQA,GAAKC,MAC5BC,UACEC,WAAY,aACZC,IAAK,kBAELD,WAAY,kBACZC,IAAK","file":"static/js/26.0ecddd2d.chunk.js","sourcesContent":["webpackJsonp([26],{\n\n/***/ 1034:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_modelEnhance__ = __webpack_require__(417);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_0__utils_modelEnhance__[\"a\" /* default */])({namespace:'transferTree',state:{dataSource:[],asyncDataSource:[]},subscriptions:{setup:function setup(_ref){var dispatch=_ref.dispatch,history=_ref.history;history.listen(function(_ref2){var pathname=_ref2.pathname;if(pathname==='/transferTree'){dispatch({type:'@request',afterResponse:function afterResponse(resp){return resp.data;},payload:[{valueField:'dataSource',url:'/tree/getData'},{valueField:'asyncDataSource',url:'/tree/getAsyncData'}]});}});}}}));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/26.0ecddd2d.chunk.js","import modelEnhance from '@/utils/modelEnhance';\r\n\r\nexport default modelEnhance({\r\n  namespace: 'transferTree',\r\n\r\n  state: {\r\n    dataSource: [],\r\n    asyncDataSource: [],\r\n  },\r\n\r\n  subscriptions: {\r\n    setup({ dispatch, history }) {\r\n      history.listen(({ pathname }) => {\r\n        if (pathname === '/transferTree') {\r\n          dispatch({\r\n            type: '@request',\r\n            afterResponse: resp => resp.data,\r\n            payload: [{\r\n              valueField: 'dataSource',\r\n              url: '/tree/getData',\r\n            }, {\r\n              valueField: 'asyncDataSource',\r\n              url: '/tree/getAsyncData',\r\n            }]\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Widgets/TransferTree/model/index.js"],"sourceRoot":""}